CREATE STREAM CLAIMSTATUS_STREAM ( CS_CLAIMSTATUSID INT, CS_DESCRIPTION VARCHAR ) WITH ( KAFKA_TOPIC = 'CIMS.FINANCIAL.CLAIMSTATUS', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIMSTATUS_KEYED WITH (KAFKA_TOPIC = 'CLAIMSTATUS_KEYED') AS 
SELECT
   CS_CLAIMSTATUSID AS KEY,
   CS_DESCRIPTION AS DESCRIPTION,
   AS_VALUE(CS_CLAIMSTATUSID) AS STATUSID 
FROM
   CLAIMSTATUS_STREAM PARTITION BY CS_CLAIMSTATUSID EMIT CHANGES;

CREATE TABLE CLAIMSTATUS ( KEY INT PRIMARY KEY, STATUSID INT, DESCRIPTION VARCHAR ) WITH ( KAFKA_TOPIC = 'CLAIMSTATUS_KEYED', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIMSTATUSCLAIMLINK_STREAM ( CL_CLAIMID INT, CS_CLAIMSTATUSID INT ) WITH ( KAFKA_TOPIC = 'CIMS.FINANCIAL.CLAIMSTATUSCLAIMLINK', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIMSTATUSCLAIMLINK_KEYED WITH(KAFKA_TOPIC = 'CLAIMSTATUSCLAIMLINK_KEYED') AS 
SELECT
   CL_CLAIMID AS CLAIMID,
   CS_CLAIMSTATUSID AS KEY,
   AS_VALUE(CS_CLAIMSTATUSID) AS STATUSID 
FROM
   CLAIMSTATUSCLAIMLINK_STREAM PARTITION BY CS_CLAIMSTATUSID EMIT CHANGES;

CREATE TABLE CLAIMSTATUSCLAIMLINK ( KEY INT PRIMARY KEY, CLAIMID INT, STATUSID INT ) WITH ( KAFKA_TOPIC = 'CLAIMSTATUSCLAIMLINK_KEYED', VALUE_FORMAT = 'AVRO' );

CREATE TABLE CLAIMSTATUS_JOINED AS 
SELECT
   CLAIMSTATUSCLAIMLINK.KEY AS KEY,
   CLAIMSTATUSCLAIMLINK.CLAIMID AS CLAIMID,
   CLAIMSTATUSCLAIMLINK.STATUSID AS STATUSID,
   CLAIMSTATUS.DESCRIPTION AS DESCRIPTION 
FROM
   CLAIMSTATUSCLAIMLINK 
   JOIN
      CLAIMSTATUS 
      ON CLAIMSTATUSCLAIMLINK.KEY = CLAIMSTATUS.KEY;

CREATE STREAM CLAIMSTATUS_JOINED_STREAM ( CLAIMID INT, STATUSID INT, DESCRIPTION VARCHAR ) WITH ( KAFKA_TOPIC = 'CLAIMSTATUS_JOINED', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIMSTATUS_JOINED_KEYED WITH(KAFKA_TOPIC = 'CLAIMSTATUS_JOINED_KEYED') AS 
SELECT
   CLAIMID AS KEY,
   AS_VALUE(CLAIMID) AS CLAIMID,
   STATUSID,
   DESCRIPTION 
FROM
   CLAIMSTATUS_JOINED_STREAM PARTITION BY CLAIMID EMIT CHANGES;

CREATE TABLE CLAIMSTATUS_CLAIMSTATUSCLAIMLINK ( KEY INT PRIMARY KEY, CLAIMID INT, STATUSID INT, DESCRIPTION VARCHAR ) WITH ( KAFKA_TOPIC = 'CLAIMSTATUS_JOINED_KEYED', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIM_STREAM ( CL_CLAIMID INT, CL_FEESUBMITTED DOUBLE, CL_TOTALOWED DOUBLE, CB_CLAIMSTATEID INT, CL_PAID BOOLEAN ) WITH ( KAFKA_TOPIC = 'CIMS.FINANCIAL.CLAIM', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIM_KEYED WITH(KAFKA_TOPIC = 'CLAIM_KEYED') AS 
SELECT
   CL_CLAIMID AS KEY,
   AS_VALUE(CL_CLAIMID) AS CLAIMID,
   CL_FEESUBMITTED AS FEESUBMITTED,
   CL_TOTALOWED AS TOTALOWED,
   CB_CLAIMSTATEID AS STATEID,
   CL_PAID AS PAID 
FROM
   CLAIM_STREAM PARTITION BY CL_CLAIMID EMIT CHANGES;

CREATE TABLE CLAIM ( KEY INT PRIMARY KEY, CLAIMID INT, FEESUBMITTED DOUBLE, TOTALOWED DOUBLE, STATEID INT, PAID BOOLEAN ) WITH ( KAFKA_TOPIC = 'CLAIM_KEYED', VALUE_FORMAT = 'AVRO' );

CREATE TABLE CLAIM_CLAIMSTATUS_JOINED AS 
SELECT
   CLAIM.KEY AS KEY,
   CLAIM.CLAIMID AS CLAIMID,
   STATUSID,
   DESCRIPTION,
   FEESUBMITTED,
   TOTALOWED,
   STATEID,
   PAID 
FROM
   CLAIM 
   LEFT JOIN
      CLAIMSTATUS_CLAIMSTATUSCLAIMLINK 
      ON CLAIMSTATUS_CLAIMSTATUSCLAIMLINK.KEY = CLAIM.KEY;

CREATE STREAM CLAIM_CLAIMSTATUS_STREAM ( STATEID INT, CLAIMID INT, STATUSID INT, DESCRIPTION VARCHAR, FEESUBMITTED DOUBLE, TOTALOWED DOUBLE, PAID BOOLEAN ) WITH ( KAFKA_TOPIC = 'CLAIM_CLAIMSTATUS_JOINED', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIMSTATE_STREAM ( CB_CLAIMSTATEID INT, CB_DESCRIPTION VARCHAR ) WITH ( KAFKA_TOPIC = 'CIMS.REFERENCE.CLAIMSTATE', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIMSTATE_KEYED WITH(KAFKA_TOPIC = 'CLAIMSTATE_KEYED') AS 
SELECT
   CB_CLAIMSTATEID AS KEY,
   AS_VALUE(CB_CLAIMSTATEID) AS STATEID,
   CB_DESCRIPTION AS STATE 
FROM
   CLAIMSTATE_STREAM PARTITION BY CB_CLAIMSTATEID EMIT CHANGES;

CREATE TABLE CLAIMSTATE ( KEY INT PRIMARY KEY, STATEID INT, STATE VARCHAR ) WITH ( KAFKA_TOPIC = 'CLAIMSTATE_KEYED', VALUE_FORMAT = 'AVRO' );

CREATE STREAM CLAIM_CLAIMSTATUS_CLAIMSTATE_JOINED AS 
SELECT
   CLAIM_CLAIMSTATUS_STREAM.STATEID AS KEY,
   CLAIMID,
   DESCRIPTION,
   FEESUBMITTED,
   TOTALOWED,
   CLAIMSTATE.STATE AS STATE,
   PAID 
FROM
   CLAIM_CLAIMSTATUS_STREAM 
   LEFT JOIN
      CLAIMSTATE 
      ON CLAIMSTATE.KEY = CLAIM_CLAIMSTATUS_STREAM.STATEID;